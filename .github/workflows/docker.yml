name: 镜像构建

on:
  push:
    branches:
    - master
  schedule:
  - cron:  '0 8 * 1/1 1'

env:
  IMAGE_AUTHORS: Bromine0x23 <bromine0x23@gmail.com>
  IMAGE_PLATFORMS: linux/amd64,linux/arm64
  CENTOS_VERSION_LATEST: 8

jobs:
  centos:
    name: CentOS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        CENTOS_VERSION: [7, 8]
        IMAGE_VARIANT: ['', 'slim']
    env:
      IMAGE_REPOSITORY_DOCKERHUB: bromine0x23/centos
      IMAGE_REPOSITORY_GHCR: ghcr.io/${{ github.repository_owner }}/centos
      IMAGE_TITLE: CentOS
      IMAGE_VERSION: ${{ matrix.CENTOS_VERSION }}
      IMAGE_VARIANT: ${{ matrix.IMAGE_VARIANT }}
    steps:
    - name: 检出代码
      id: checkout
      uses: actions/checkout@v2
    - name: 设置 QEMU
      id: setup_qemu
      uses: docker/setup-qemu-action@v1
    - name: 设置 Docker Buildx
      id: setup_buildx
      uses: docker/setup-buildx-action@v1
    - name: 登录 Docker Hub
      id: login_dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: 登录 GitHub Container Registry
      id: login_ghcr
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: 设置变量
      id: variables
      run: |
        export IMAGE_VERSION="${{ env.IMAGE_VERSION }}"
        export IMAGE_VARIANT="${{ env.IMAGE_VARIANT }}"
        export CENTOS_VERSION_LATEST="${{ env.CENTOS_VERSION_LATEST }}"

        export IMAGE_TAG="${{ env.IMAGE_VERSION }}${IMAGE_VARIANT:+-${IMAGE_VARIANT}}"
        
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        echo "IMAGE_TAGS<<EOF"        >> $GITHUB_ENV
        echo "${{ env.IMAGE_REPOSITORY_DOCKERHUB }}:${IMAGE_TAG}" >> $GITHUB_ENV; echo ""
        echo "${{ env.IMAGE_REPOSITORY_GHCR      }}:${IMAGE_TAG}" >> $GITHUB_ENV; echo ""
        if [ "${IMAGE_VERSION}" == "${CENTOS_VERSION_LATEST}" ]; then
          export IMAGE_TAG_LATEST="${IMAGE_VARIANT:-latest}"
          echo "${{ env.IMAGE_REPOSITORY_DOCKERHUB }}:${IMAGE_TAG_LATEST}" >> $GITHUB_ENV; echo ""
          echo "${{ env.IMAGE_REPOSITORY_GHCR      }}:${IMAGE_TAG_LATEST}" >> $GITHUB_ENV; echo ""
        fi
        echo 'EOF' >> $GITHUB_ENV
        
        echo "IMAGE_BUILD_ARG_BASE_IMAGE=centos:${{ env.IMAGE_VERSION }}" >> $GITHUB_ENV
        if [ "${IMAGE_VARIANT}" == "slim" ]; then
          echo "IMAGE_BUILD_ARG_IS_SLIM=slim" >> $GITHUB_ENV
        fi
    - name: 构建及发布镜像
      id: build_push
      uses: docker/build-push-action@v2
      with:
        context: ./${{ env.IMAGE_VERSION }}
        build-args: |
          BASE_IMAGE=${{ env.IMAGE_BUILD_ARG_BASE_IMAGE }}
             IS_SLIM=${{ env.IMAGE_BUILD_ARG_IS_SLIM    }}
        labels: |
          org.opencontainers.image.authors="${{ env.IMAGE_AUTHORS }}"
          org.opencontainers.image.title="${{   env.IMAGE_TITLE   }}"
          org.opencontainers.image.version="${{ env.IMAGE_VERSION }}"
        platforms: ${{ env.IMAGE_PLATFORMS }}
        push: true
        tags: ${{ env.IMAGE_TAGS }}
    - name: 漏洞扫描
      id: trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.IMAGE_REPOSITORY_DOCKERHUB }}:${{ env.IMAGE_TAG }}'
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
    - name: 上传漏洞报告
      id: upload-sarif
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'