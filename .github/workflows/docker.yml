name: Docker

on:
  push:
    branches:
    - master
  schedule:
  - cron:  '0 8 * 1/1 1'

env:
  AUTHORS: Bromine0x23 <bromine0x23@gmail.com>
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  centos:
    name: CentOS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        VERSION: [7, 8]
        VARIANT: ['', 'slim']
    env:
      DOCKERHUB_REPOSITORY: bromine0x23/centos
      GHCR_REPOSITORY: ${{ github.repository_owner }}/centos
      LATEST_VERSION: 8
      VERSION: ${{ matrix.VERSION }}
      VARIANT: ${{ matrix.VARIANT }}
      TITLE: CentOS
    steps:
    - name: 检出代码
      id: checkout
      uses: actions/checkout@v2
    - name: 设置 QEMU
      id: setup_qemu
      uses: docker/setup-qemu-action@v1
    - name: 设置 Docker Buildx
      id: setup_buildx
      uses: docker/setup-buildx-action@v1
    - name: 登录 Docker Hub
      id: login_dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: 登录 GitHub Container Registry
      id: login_ghcr
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: 设置变量
      id: variables
      run: |
        export VERSION="${{ env.VERSION }}"
        export VARIANT="${{ env.VARIANT }}"
        export LATEST_VERSION="${{ env.LATEST_VERSION }}"
        
        echo 'DOCKER_TAGS<<EOF' >> $GITHUB_ENV
        echo    "${{ env.DOCKERHUB_REPOSITORY }}:${{ env.VERSION }}${VARIANT:+-${VARIANT}}" >> $GITHUB_ENV; echo ""
        echo "ghcr.io/${{ env.GHCR_REPOSITORY }}:${{ env.VERSION }}${VARIANT:+-${VARIANT}}" >> $GITHUB_ENV; echo ""
        if [ "${VERSION}" == "${LATEST_VERSION}" ]; then
          echo    "${{ env.DOCKERHUB_REPOSITORY }}:${VARIANT:-latest}" >> $GITHUB_ENV; echo ""
          echo "ghcr.io/${{ env.GHCR_REPOSITORY }}:${VARIANT:-latest}" >> $GITHUB_ENV; echo ""
        fi
        echo 'EOF' >> $GITHUB_ENV
        
        echo "DOCKER_BUILD_ARG_BASE_IMAGE=centos:${{ env.VERSION }}" >> $GITHUB_ENV
        if [ "${VARIANT}" == "slim" ]; then
          echo "DOCKER_BUILD_ARG_IS_SLIM=slim" >> $GITHUB_ENV
        fi
    - name: 构建及发布镜像
      id: build_push
      uses: docker/build-push-action@v2
      with:
        context: ./${{ env.VERSION }}
        build-args: |
          BASE_IMAGE=${{ env.DOCKER_BUILD_ARG_BASE_IMAGE }}
          IS_SLIM=${{ env.DOCKER_BUILD_ARG_IS_SLIM }}
        labels: |
          org.opencontainers.image.authors="${{ env.AUTHORS }}"
          org.opencontainers.image.title="${{ env.TITLE }}"
          org.opencontainers.image.version="${{ env.VERSION }}"
        platforms: ${{ env.PLATFORMS }}
        push: true
        tags: ${{ env.DOCKER_TAGS }}
    - name: 漏洞扫描
      id: trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ghcr.io/${{ env.GHCR_REPOSITORY }}@sha256:${{ steps.build_push.outputs.digest }}'
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
    - name: 上传漏洞报告
      id: upload-sarif
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'